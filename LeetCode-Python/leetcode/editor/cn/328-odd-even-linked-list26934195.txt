class Solution:
    def oddEvenList(self, head: ListNode) -> ListNode:
        dummy_odd = odd = ListNode(None)
        dummy_even = even = ListNode(None)

        def recursive(head, idx):
            nonlocal odd, even
            if head is None:
                return

            if idx % 2:  # odd
                odd.next = head
                odd = odd.next
            else:
                even.next = head
                even = even.next

            recursive(head.next, idx + 1)
            return

        recursive(head, 1)
        even.next = None
        odd.next = dummy_even.next
        return dummy_odd.next
#runtime:72 ms
#memory:21.9 MB
